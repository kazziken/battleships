#Pull 1
[X] Initalize Git
[X] Setup main.python3

#Pull 2
[X] Get input from player
[X] Parse into x and y co-ordinates
[X] Render an empty board
[X] Render a board with shots

#Pull 3
[X] Decide how to represent Battleships in code
[x] Render a board with Battleships

#Pull 4
[] Work out when a shot was a hit/miss
[] Figure out overall state of the game
[] Wrap everything needed to understand the game position in a single class - seperate each part of the program into different pieces
 -- GameBoard class
    * Battleship locations
    * Shot locations
    * Board dimensions
    => battleship health (if a battleship is _ length == their health)
    => was a shot a hit or a miss

# pull 5
[X] show the player their current shots
[X] render an "admin" board with both battleships and shots
[x] hook our player input up to our game engine
[x] end the game when all battleships have been destroyed

#pull 6
[X] making our game: 2 players
    Adding Second player =>
    * 2 game boards

    ###Later ###
    Secret Way for players to arrange their battleships
    * Right now can only hard code the battleships in the game
    Random AI player
    *Intelligent AI that looks at where current ships are and shoots next to them
    *more detailed and neat "annoucements"
    *more intricate board renderings

[X] Alternate turns to take shots
[X] Print the winner at the end of the game

# pull 7
[X] Random AI player
[] Secret way for players to arrange their battlehips
[X] More detailed and neat "annoucements"
[X] More intricate board renderings
[] Intelligent AI that looks at where current ships are and shoots next to them

How are we doing our AI player
* lets do a function that is our Ai player
 looks at GameBoard => Shot location
